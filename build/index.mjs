class f{static windowMain="vorthJS";static singletonClass=(d)=>{console.warn({class:d,message:"singleton class, returning previous Instance"})}}class w{static __;constructor(d){if(w.__ instanceof w)return f.singletonClass(this),this;w.__=this}}class _{static __;constructor(d){if(_.__ instanceof _)return f.singletonClass(this),this;_.__=this}}class i{static default={load:async(d)=>{},click:async(d)=>{},hover:async(d)=>{},shortCut:async(d)=>{}};static __;constructor(d){if(i.__ instanceof i)return f.singletonClass(this),this;i.__=this}}class y{static __;constructor(){if(y.__ instanceof y)return f.singletonClass(this),this;y.__=this}}class n{static __;constructor(d){if(n.__ instanceof n)return f.singletonClass(this),this;n.__=this}}class x{static _=new x;constructor(){window[f.windowMain]=x.register}static register=({onRouteChange:d,pathRule:v,triggers:I=void 0,callbacks:L=void 0})=>{new w(d),new _(L),new i(I),new y,new n(v)}}export{x as Vorth};
